{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\nexport const addToCart = (items, product) => dispatch => {\n  const cartItems = items.slice();\n  let alreadyExists = false;\n  cartItems.forEach(x => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n      x.count++;\n    }\n  });\n\n  if (!alreadyExists) {\n    cartItems.push({ ...product,\n      count: 1\n    });\n  }\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      cartItems\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\nexport const removeFromCart = (items, product) => dispatch => {\n  const cartItems = items.slice().filter(x => x._id !== product._id);\n  dispatch({\n    type: REMOVE_FROM_CART,\n    payload: {\n      cartItems\n    }\n  });\n  localStorage.setItem(JSON.stringify(cartItems));\n};","map":{"version":3,"sources":["/Users/ronanmak/Documents/react-shopping-cart/src/actions/cartAction.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","addToCart","items","product","dispatch","cartItems","slice","alreadyExists","forEach","x","_id","count","push","type","payload","localStorage","setItem","JSON","stringify","removeFromCart","filter"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,UAA9C;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAqBC,QAAD,IAAc;AACzD,QAAMC,SAAS,GAAGH,KAAK,CAACI,KAAN,EAAlB;AACA,MAAIC,aAAa,GAAG,KAApB;AACAF,EAAAA,SAAS,CAACG,OAAV,CAAmBC,CAAD,IAAO;AACvB,QAAIA,CAAC,CAACC,GAAF,KAAUP,OAAO,CAACO,GAAtB,EAA2B;AACzBH,MAAAA,aAAa,GAAG,IAAhB;AACAE,MAAAA,CAAC,CAACE,KAAF;AACD;AACF,GALD;;AAMA,MAAI,CAACJ,aAAL,EAAoB;AAClBF,IAAAA,SAAS,CAACO,IAAV,CAAe,EAAE,GAAGT,OAAL;AAAcQ,MAAAA,KAAK,EAAE;AAArB,KAAf;AACD;;AACDP,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEd,WADC;AAEPe,IAAAA,OAAO,EAAE;AAAET,MAAAA;AAAF;AAFF,GAAD,CAAR;AAIAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeb,SAAf,CAAlC;AACD,CAjBM;AAmBP,OAAO,MAAMc,cAAc,GAAG,CAACjB,KAAD,EAAQC,OAAR,KAAqBC,QAAD,IAAc;AAC9D,QAAMC,SAAS,GAAGH,KAAK,CAACI,KAAN,GAAcc,MAAd,CAAsBX,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUP,OAAO,CAACO,GAA9C,CAAlB;AACAN,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,IAAAA,OAAO,EAAE;AAAET,MAAAA;AAAF;AAAnC,GAAD,CAAR;AACAU,EAAAA,YAAY,CAACC,OAAb,CAAqBC,IAAI,CAACC,SAAL,CAAeb,SAAf,CAArB;AACD,CAJM","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (items, product) => (dispatch) => {\n  const cartItems = items.slice();\n  let alreadyExists = false;\n  cartItems.forEach((x) => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n      x.count++;\n    }\n  });\n  if (!alreadyExists) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  dispatch({\n    type: ADD_TO_CART,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (items, product) => (dispatch) => {\n  const cartItems = items.slice().filter((x) => x._id !== product._id);\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n  localStorage.setItem(JSON.stringify(cartItems));\n};\n"]},"metadata":{},"sourceType":"module"}